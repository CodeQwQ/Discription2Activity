#### UCMeta到活动图

应用规则：

**规则1c**：为每个用例生成一个活动图实例

**规则1.1a**（简单句）：对用例中的每个简单句生成一个 `CallOperationAction` 操作节点

**规则1.2c**：对每个复合句（ComplexSentence）应用1.2.1–1.2.4子规则

- **规则1.2.1c（ConditionCheckSentence）**：针对条件检查句（如含“VALIDATES THAT”或“IF…THEN”结构），生成一个 `CallOperationAction` 操作节点和一个判定节点（`DecisionNode`）；对于该句对应的备选流，如果生成**详细活动图**，则递归地对备选流中的句子调用规则1.1–1.3处理；如果生成**概览活动图**，则用一个 `CallBehaviorAction` 调用序列图中的对应交互
- **规则1.2.2c（ConditionalSentence）**：针对条件句（IF-THEN-ELSE-ELSEIF），生成一个 `DecisionNode`；同样地，详细图中递归处理其包含的主句和备选句，概览图中则用 `CallBehaviorAction` 引用对应交互
- **规则1.2.3c（ParallelSentence）**：针对并发句（含“MEANWHILE”并行结构），生成一个 `ForkNode` 和一个 `JoinNode`，并对并行子句之间的句子递归调用规则1.1–1.3
- **规则1.2.4c（IterativeSentence）**：针对迭代句（含“DO-UNTIL”结构），生成一个 `DecisionNode`，并对迭代体内的句子递归调用规则1.1–1.3

**规则1.3c**：对每个特殊句（SpecialSentence）应用1.3.1–1.3.4子规则

- **规则1.3.1a（IncludeSentence）**：遇到“INCLUDE USE CASE”句时，生成一个 `CallBehaviorAction`，指向被包含用例对应的交互（Interaction）
- **规则1.3.2a（Exclude/ExtendSentence）**：遇到“EXTENDED BY USE CASE”句时，生成一个 `CallBehaviorAction`，指向扩展用例对应的交互
- **规则1.3.3a（AbortSentence）**：遇到“ABORT”句时，在当前流程线上生成一个 `FlowFinalNode` 用于终止流程
- **规则1.3.4a（ResumeStepSentence）**：遇到“RESUME STEP”句时，生成一条控制流（`ControlFlow`）连接到指定的先前步骤节点

**规则1.4c（GlobalAlternativeFlow）**：针对全局备选流，生成一个 `AcceptEventAction`（表示等待触发事件，如用户按Cancel）和一个 `InterruptibleActivityRegion`（覆盖主流程）；然后对该备选流中的句子递归应用1.1–1.3处理（或在概览图中用 `CallBehaviorAction` 引用相应交互）

**规则1.5a（Precondition）**：将用例的前置条件生成一个 `Constraint`，作为活动图的前置约束

**规则1.6a（Postcondition）**：将每个流程的后置条件生成一个 `Constraint`，关联到相应的流程结束节点

**规则2c（数据流附加）**：在已生成的活动图上附加数据流信息

- **规则2.1a**：对于事务类型为**发起（Initiation）**或**回应（ResponseToPrimary/SecondaryActor）**的简单句，在对应的 `CallOperationAction` 上生成一个 `OutputPin`，表示输出实体
- **规则2.2a**：对于事务类型为**内部事务（InternalTransaction）**的简单句，在对应的 `CallOperationAction` 上生成一个 `InputPin` 和一个 `OutputPin`（忽略“系统”和参与者）
- **规则2.3a**：对于条件检查句，在对应的 `CallOperationAction` 上生成一个 `InputPin`（忽略“系统”和参与者），表示输入实体